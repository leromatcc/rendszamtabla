[main]
authc.loginUrl = /login.xhtml
user.loginUrl = /login.xhtml
roles.loginUrl = /login.xhtml
perms.loginUrl = /login.xhtml

# Create JDBC realm.
jdbcRealm = com.rends.service.security.JdbcSaltRealm
datasource = org.apache.shiro.jndi.JndiObjectFactory
# datasource.resourceName = java:comp/DefaultDataSource
datasource.resourceName = java:/MyPizzaDS
# if the JNDI name is prefixed with java:comp/env (like a JEE environment),
# uncomment this line:
# datasource.resourceRef = true

jdbcRealm.dataSource = $datasource 

# Configure JDBC realm SQL queries.
jdbcRealm.authenticationQuery = SELECT password, salt FROM Users WHERE username = ? and status = 'Active'
jdbcRealm.userRolesQuery = SELECT user_role FROM USER_ROLES WHERE user_Id = (SELECT id FROM USERS WHERE username = ?)

# Configure JDBC realm password hashing.
credentialsMatcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
credentialsMatcher.hashAlgorithmName = SHA-512
# Base64 encoding (less text):
# credentialsMatcher.storedCredentialsHexEncoded = false
jdbcRealm.credentialsMatcher = $credentialsMatcher
jdbcRealm.permissionsLookupEnabled = true
jdbcRealm.permissionsQuery = SELECT permission FROM ROLE_PERMISSIONS where user_role = ?

jdbcRealm.authorizationCachingEnabled = false

[urls]

# Avoid direct access to include files
/**/*Include.xhtml = perms["none"]

/pages/pessoa/pessoa.xhtml = perms["pessoa:read"]

/pages/pessoa/pessoaView.xhtml = perms["pessoa:read"]

/pages/pessoa/pessoaEndereco.xhtml = perms["pessoa:read"]

/pages/pessoa/pessoaCreate.xhtml = perms["pessoa:create"]

/pages/pessoa/pessoaEdit.xhtml = perms["pessoa:update"]

/pages/empresa/empresa.xhtml = perms["empresa:read"]

/pages/empresa/empresaView.xhtml = perms["empresa:read"]

/pages/empresa/empresaEndereco.xhtml = perms["empresa:read"]

/pages/empresa/empresaCreate.xhtml = perms["empresa:create"]

/pages/empresa/empresaEdit.xhtml = perms["empresa:update"]

/pages/automovelTipo/automovelTipo.xhtml = perms["automovelTipo:read"]

/pages/automovelTipo/automovelTipoView.xhtml = perms["automovelTipo:read"]

/pages/automovelTipo/automovelTipoCreate.xhtml = perms["automovelTipo:create"]

/pages/automovelTipo/automovelTipoEdit.xhtml = perms["automovelTipo:update"]

/pages/automovel/automovel.xhtml = perms["automovel:read"]

/pages/automovel/automovelView.xhtml = perms["automovel:read"]

/pages/automovel/automovelAutomovelTipo.xhtml = perms["automovel:read"]

/pages/automovel/automovelCreate.xhtml = perms["automovel:create"]

/pages/automovel/automovelEdit.xhtml = perms["automovel:update"]

/pages/pessoaAutomovel/pessoaAutomovel.xhtml = perms["pessoaAutomovel:read"]

/pages/pessoaAutomovel/pessoaAutomovelView.xhtml = perms["pessoaAutomovel:read"]

/pages/pessoaAutomovel/pessoaAutomovelAutomovel.xhtml = perms["pessoaAutomovel:read"]

/pages/pessoaAutomovel/pessoaAutomovelCreate.xhtml = perms["pessoaAutomovel:create"]

/pages/pessoaAutomovel/pessoaAutomovelEdit.xhtml = perms["pessoaAutomovel:update"]

/pages/acessosRegistros/acessosRegistros.xhtml = perms["acessosRegistros:read"]

/pages/acessosRegistros/acessosRegistrosView.xhtml = perms["acessosRegistros:read"]

/pages/acessosRegistros/acessosRegistrosEstacionamento.xhtml = perms["acessosRegistros:read"]

/pages/acessosRegistros/acessosRegistrosPermissaoAcesso.xhtml = perms["acessosRegistros:read"]

/pages/acessosRegistros/acessosRegistrosCreate.xhtml = perms["acessosRegistros:create"]

/pages/acessosRegistros/acessosRegistrosEdit.xhtml = perms["acessosRegistros:update"]

/pages/camera/camera.xhtml = perms["camera:read"]

/pages/camera/cameraView.xhtml = perms["camera:read"]

/pages/camera/cameraEstabelecimento.xhtml = perms["camera:read"]

/pages/camera/cameraCreate.xhtml = perms["camera:create"]

/pages/camera/cameraEdit.xhtml = perms["camera:update"]

/pages/imagens/imagens.xhtml = perms["imagens:read"]

/pages/imagens/imagensView.xhtml = perms["imagens:read"]

/pages/imagens/imagensAttachments.xhtml = perms["imagens:read"]

/pages/imagens/imagensCreate.xhtml = perms["imagens:create"]

/pages/imagens/imagensEdit.xhtml = perms["imagens:update"]

/pages/imagemCamera/imagemCamera.xhtml = perms["imagemCamera:read"]

/pages/imagemCamera/imagemCameraView.xhtml = perms["imagemCamera:read"]

/pages/imagemCamera/imagemCameraCamera.xhtml = perms["imagemCamera:read"]

/pages/imagemCamera/imagemCameraCreate.xhtml = perms["imagemCamera:create"]

/pages/imagemCamera/imagemCameraEdit.xhtml = perms["imagemCamera:update"]

/pages/acessosPermissao/acessosPermissao.xhtml = perms["acessosPermissao:read"]

/pages/acessosPermissao/acessosPermissaoView.xhtml = perms["acessosPermissao:read"]

/pages/acessosPermissao/acessosPermissaoPessoa.xhtml = perms["acessosPermissao:read"]

/pages/acessosPermissao/acessosPermissaoCreate.xhtml = perms["acessosPermissao:create"]

/pages/acessosPermissao/acessosPermissaoEdit.xhtml = perms["acessosPermissao:update"]

/pages/endereco/endereco.xhtml = perms["endereco:read"]

/pages/endereco/enderecoView.xhtml = perms["endereco:read"]

/pages/endereco/enderecoCreate.xhtml = perms["endereco:create"]

/pages/endereco/enderecoEdit.xhtml = perms["endereco:update"]

/pages/estacionamento/estacionamento.xhtml = anon

/pages/estacionamento/estacionamentoView.xhtml = anon

/pages/estacionamento/estacionamentoEmpresa.xhtml = anon

/pages/estacionamento/estacionamentoCreate.xhtml = anon

/pages/estacionamento/estacionamentoEdit.xhtml = anon

# admin pages only for Administrators
/pages/admin/** = roles["Administrator"]

# what anomymous users can do
/login.xhtml = authc
/pages/main.xhtml = anon
/pages/user/activation.xhtml = anon
/pages/userManagement/resetPassword.xhtml = anon

/pages/user/register.xhtml = anon
/pages/userManagement/registerSuccess.xhtml = anon

# all other pages are available for authenticated users, only
/pages/** = authc
